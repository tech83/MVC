//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERPOLD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ERPOldEntities : DbContext
    {
        public ERPOldEntities()
            : base("name=ERPOldEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TBACCOUNTMASTER> TBACCOUNTMASTERs { get; set; }
        public virtual DbSet<TBACCOUNTTYPEMASTER> TBACCOUNTTYPEMASTERs { get; set; }
        public virtual DbSet<TBBALANCESHEETGROUP> TBBALANCESHEETGROUPs { get; set; }
        public virtual DbSet<TBCASHPAYMENT> TBCASHPAYMENTs { get; set; }
        public virtual DbSet<TBCASHRECEIPT> TBCASHRECEIPTs { get; set; }
        public virtual DbSet<TBCHEQUERECEIPT> TBCHEQUERECEIPTs { get; set; }
        public virtual DbSet<TBCHQPAYMENT> TBCHQPAYMENTs { get; set; }
        public virtual DbSet<TBCREDIT> TBCREDITs { get; set; }
        public virtual DbSet<TBCUSTOMER> TBCUSTOMERs { get; set; }
        public virtual DbSet<TBDEBIT> TBDEBITs { get; set; }
        public virtual DbSet<TBITEMMASTERDETAIL> TBITEMMASTERDETAILs { get; set; }
        public virtual DbSet<TBITEMMASTERHEADER> TBITEMMASTERHEADERs { get; set; }
        public virtual DbSet<TblBrand> TblBrands { get; set; }
        public virtual DbSet<TblItemGroup> TblItemGroups { get; set; }
        public virtual DbSet<TblSizeMaster> TblSizeMasters { get; set; }
        public virtual DbSet<TBPURCHASEDETAIL> TBPURCHASEDETAILS { get; set; }
        public virtual DbSet<TBPURCHASEHEADER> TBPURCHASEHEADERs { get; set; }
        public virtual DbSet<TBSALE> TBSALEs { get; set; }
        public virtual DbSet<TBSALEDETAIL> TBSALEDETAILs { get; set; }
        public virtual DbSet<TBSALEHEADER> TBSALEHEADERs { get; set; }
        public virtual DbSet<TBSTOCK> TBSTOCKs { get; set; }
        public virtual DbSet<TBTAXCONFIG> TBTAXCONFIGs { get; set; }
        public virtual DbSet<CashReceipt> CashReceipts { get; set; }
    
        public virtual ObjectResult<accountLedgers_Result> accountLedgers(Nullable<int> aCCOUNTID, Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE)
        {
            var aCCOUNTIDParameter = aCCOUNTID.HasValue ?
                new ObjectParameter("ACCOUNTID", aCCOUNTID) :
                new ObjectParameter("ACCOUNTID", typeof(int));
    
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<accountLedgers_Result>("accountLedgers", aCCOUNTIDParameter, fROMDATEParameter, tODATEParameter);
        }
    
        public virtual ObjectResult<trialbalance_Result> trialbalance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trialbalance_Result>("trialbalance");
        }
    
        public virtual ObjectResult<trialbalancereport_Result> trialbalancereport(Nullable<decimal> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<trialbalancereport_Result>("trialbalancereport", idParameter);
        }
    }
}
